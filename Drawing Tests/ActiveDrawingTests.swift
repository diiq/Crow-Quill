import XCTest
@testable import Crow_Quill

class ActiveDrawingTests: XCTestCase {
  lazy var renderer = TestRenderer()
  lazy var points : [StrokePoint] = {
    return (1...5).map {
      StrokePoint(x: 10.0 * Double($0), y: 50.0, weight: 1)
    }
  }()

  lazy var predictedPoints : [StrokePoint] = {
    return (5...10).map {
      StrokePoint(x: 10.0 * Double($0), y: 50.0, weight: 1)
    }
  }()

  lazy var morePoints : [StrokePoint] = {
    return (5...10).map {
      StrokePoint(x: 10.0 * Double($0), y: 51.0, weight: 1)
    }
  }()

  lazy var morePredictedPoints : [StrokePoint] = {
    return (10...15).map {
      StrokePoint(x: 10.0 * Double($0), y: 51.0, weight: 1)
    }
  }()

  let drawing = ActiveDrawing<TestImage, Int>()

  func testDrawsEmpty() {
    drawing.draw(renderer)

    XCTAssertEqual(renderer.currentImage, [], "An empty drawing is empty")
  }

  func testDrawsUndrawn() {
    drawing.addOrUpdateStroke(1, points: points)
    drawing.updateStrokePredictions(1, points: predictedPoints)
    drawing.draw(renderer)

    XCTAssertEqual(renderer.currentImage, ["move: <10.0, 55.0>", "bezier: <10.0, 55.0>, [<10.0, 55.0>, <16.6666666666667, 55.0>], <20.0, 55.0>", "arc: <20.0, 55.0>, <20.0, 45.0>", "bezier: <20.0, 45.0>, [<16.6666666666667, 45.0>, <10.0, 45.0>], <10.0, 45.0>", "arc: <10.0, 45.0>, <10.0, 55.0>", "fill", "move: <20.0, 55.0>", "bezier: <20.0, 55.0>, [<23.3333333333333, 55.0>, <26.6666666666667, 55.0>], <30.0, 55.0>", "arc: <30.0, 55.0>, <30.0, 45.0>", "bezier: <30.0, 45.0>, [<26.6666666666667, 45.0>, <23.3333333333333, 45.0>], <20.0, 45.0>", "arc: <20.0, 45.0>, <20.0, 55.0>", "fill", "move: <30.0, 55.0>", "bezier: <30.0, 55.0>, [<33.3333333333333, 55.0>, <36.6666666666667, 55.0>], <40.0, 55.0>", "arc: <40.0, 55.0>, <40.0, 45.0>", "bezier: <40.0, 45.0>, [<36.6666666666667, 45.0>, <33.3333333333333, 45.0>], <30.0, 45.0>", "arc: <30.0, 45.0>, <30.0, 55.0>", "fill", "move: <40.0, 55.0>", "bezier: <40.0, 55.0>, [<43.3333333333333, 55.0>, <50.0, 55.0>], <50.0, 55.0>", "arc: <50.0, 55.0>, <50.0, 45.0>", "bezier: <50.0, 45.0>, [<50.0, 45.0>, <43.3333333333333, 45.0>], <40.0, 45.0>", "arc: <40.0, 45.0>, <40.0, 55.0>", "fill", "move: <50.0, 55.0>", "bezier: <50.0, 55.0>, [<50.0, 55.0>, <50.0, 55.0>], <50.0, 55.0>", "arc: <50.0, 55.0>, <50.0, 45.0>", "bezier: <50.0, 45.0>, [<50.0, 45.0>, <50.0, 45.0>], <50.0, 45.0>", "arc: <50.0, 45.0>, <50.0, 55.0>", "fill", "move: <50.0, 55.0>", "bezier: <50.0, 55.0>, [<50.0, 55.0>, <56.6666666666667, 55.0>], <60.0, 55.0>", "arc: <60.0, 55.0>, <60.0, 45.0>", "bezier: <60.0, 45.0>, [<56.6666666666667, 45.0>, <50.0, 45.0>], <50.0, 45.0>", "arc: <50.0, 45.0>, <50.0, 55.0>", "fill", "move: <60.0, 55.0>", "bezier: <60.0, 55.0>, [<63.3333333333333, 55.0>, <66.6666666666667, 55.0>], <70.0, 55.0>", "arc: <70.0, 55.0>, <70.0, 45.0>", "bezier: <70.0, 45.0>, [<66.6666666666667, 45.0>, <63.3333333333333, 45.0>], <60.0, 45.0>", "arc: <60.0, 45.0>, <60.0, 55.0>", "fill", "move: <70.0, 55.0>", "bezier: <70.0, 55.0>, [<73.3333333333333, 55.0>, <76.6666666666666, 55.0>], <80.0, 55.0>", "arc: <80.0, 55.0>, <80.0, 45.0>", "bezier: <80.0, 45.0>, [<76.6666666666666, 45.0>, <73.3333333333333, 45.0>], <70.0, 45.0>", "arc: <70.0, 45.0>, <70.0, 55.0>", "fill", "move: <80.0, 55.0>", "bezier: <80.0, 55.0>, [<83.3333333333333, 55.0>, <86.6666666666666, 55.0>], <90.0, 55.0>", "arc: <90.0, 55.0>, <90.0, 45.0>", "bezier: <90.0, 45.0>, [<86.6666666666666, 45.0>, <83.3333333333333, 45.0>], <80.0, 45.0>", "arc: <80.0, 45.0>, <80.0, 55.0>", "fill", "move: <90.0, 55.0>", "bezier: <90.0, 55.0>, [<93.3333333333333, 55.0>, <100.0, 55.0>], <100.0, 55.0>", "arc: <100.0, 55.0>, <100.0, 45.0>", "bezier: <100.0, 45.0>, [<100.0, 45.0>, <93.3333333333333, 45.0>], <90.0, 45.0>", "arc: <90.0, 45.0>, <90.0, 55.0>", "fill"],
      "Draws initial stroke and predictions")
    XCTAssertEqual(drawing.frozen!, ["move: <10.0, 55.0>", "bezier: <10.0, 55.0>, [<10.0, 55.0>, <16.6666666666667, 55.0>], <20.0, 55.0>", "arc: <20.0, 55.0>, <20.0, 45.0>", "bezier: <20.0, 45.0>, [<16.6666666666667, 45.0>, <10.0, 45.0>], <10.0, 45.0>", "arc: <10.0, 45.0>, <10.0, 55.0>", "fill", "move: <20.0, 55.0>", "bezier: <20.0, 55.0>, [<23.3333333333333, 55.0>, <26.6666666666667, 55.0>], <30.0, 55.0>", "arc: <30.0, 55.0>, <30.0, 45.0>", "bezier: <30.0, 45.0>, [<26.6666666666667, 45.0>, <23.3333333333333, 45.0>], <20.0, 45.0>", "arc: <20.0, 45.0>, <20.0, 55.0>", "fill", "move: <30.0, 55.0>", "bezier: <30.0, 55.0>, [<33.3333333333333, 55.0>, <36.6666666666667, 55.0>], <40.0, 55.0>", "arc: <40.0, 55.0>, <40.0, 45.0>", "bezier: <40.0, 45.0>, [<36.6666666666667, 45.0>, <33.3333333333333, 45.0>], <30.0, 45.0>", "arc: <30.0, 45.0>, <30.0, 55.0>", "fill"],
      "Frozen image contains only solidified points")
    renderer.clear()
    drawing.forgetPredictions(1)
    drawing.addOrUpdateStroke(1, points: morePoints)
    drawing.updateStrokePredictions(1, points: morePredictedPoints)
    drawing.draw(renderer)
    XCTAssertEqual(renderer.currentImage, ["move: <10.0, 55.0>", "bezier: <10.0, 55.0>, [<10.0, 55.0>, <16.6666666666667, 55.0>], <20.0, 55.0>", "arc: <20.0, 55.0>, <20.0, 45.0>", "bezier: <20.0, 45.0>, [<16.6666666666667, 45.0>, <10.0, 45.0>], <10.0, 45.0>", "arc: <10.0, 45.0>, <10.0, 55.0>", "fill", "move: <20.0, 55.0>", "bezier: <20.0, 55.0>, [<23.3333333333333, 55.0>, <26.6666666666667, 55.0>], <30.0, 55.0>", "arc: <30.0, 55.0>, <30.0, 45.0>", "bezier: <30.0, 45.0>, [<26.6666666666667, 45.0>, <23.3333333333333, 45.0>], <20.0, 45.0>", "arc: <20.0, 45.0>, <20.0, 55.0>", "fill", "move: <30.0, 55.0>", "bezier: <30.0, 55.0>, [<33.3333333333333, 55.0>, <36.6666666666667, 55.0>], <40.0, 55.0>", "arc: <40.0, 55.0>, <40.0, 45.0>", "bezier: <40.0, 45.0>, [<36.6666666666667, 45.0>, <33.3333333333333, 45.0>], <30.0, 45.0>", "arc: <30.0, 45.0>, <30.0, 55.0>", "fill", "move: <40.0, 55.0>", "bezier: <40.0, 55.0>, [<43.2079053657262, 54.9958115684903>, <48.7266321067931, 54.2013600008651>], <49.502481404895, 54.9751859510499>", "arc: <49.502481404895, 54.9751859510499>, <50.497518595105, 45.0248140489501>", "bezier: <50.497518595105, 45.0248140489501>, [<49.6722404117377, 44.1975827662322>, <43.4567027906831, 45.0040854737079>], <40.0, 45.0>", "arc: <40.0, 45.0>, <40.0, 55.0>", "fill", "move: <49.502481404895, 54.9751859510499>", "bezier: <49.502481404895, 54.9751859510499>, [<49.7541668591825, 55.2262150314245>, <49.2477652843943, 55.7198670206124>], <49.502481404895, 55.9751859510499>", "arc: <49.502481404895, 55.9751859510499>, <50.497518595105, 46.0248140489501>", "bezier: <50.497518595105, 46.0248140489501>, [<50.2458331408175, 45.7737849685755>, <50.7522347156058, 45.2801329793876>], <50.497518595105, 45.0248140489501>", "arc: <50.497518595105, 45.0248140489501>, <49.502481404895, 54.9751859510499>", "fill", "move: <49.502481404895, 55.9751859510499>", "bezier: <49.502481404895, 55.9751859510499>, [<50.3277595882623, 56.8024172337678>, <56.5432972093169, 55.9959145262921>], <60.0, 56.0>", "arc: <60.0, 56.0>, <60.0, 46.0>", "bezier: <60.0, 46.0>, [<56.7920946342738, 46.0041884315097>, <51.2733678932069, 46.7986399991349>], <50.497518595105, 46.0248140489501>", "arc: <50.497518595105, 46.0248140489501>, <49.502481404895, 55.9751859510499>", "fill", "move: <60.0, 56.0>", "bezier: <60.0, 56.0>, [<63.3737904711947, 56.0039874797171>, <66.6666666666667, 56.0>], <70.0, 56.0>", "arc: <70.0, 56.0>, <70.0, 46.0>", "bezier: <70.0, 46.0>, [<66.6666666666667, 46.0>, <63.290806097983, 45.9957033283774>], <60.0, 46.0>", "arc: <60.0, 46.0>, <60.0, 56.0>", "fill", "move: <70.0, 56.0>", "bezier: <70.0, 56.0>, [<73.3333333333333, 56.0>, <76.6666666666666, 56.0>], <80.0, 56.0>", "arc: <80.0, 56.0>, <80.0, 46.0>", "bezier: <80.0, 46.0>, [<76.6666666666666, 46.0>, <73.3333333333333, 46.0>], <70.0, 46.0>", "arc: <70.0, 46.0>, <70.0, 56.0>", "fill", "move: <80.0, 56.0>", "bezier: <80.0, 56.0>, [<83.3333333333333, 56.0>, <86.6666666666666, 56.0>], <90.0, 56.0>", "arc: <90.0, 56.0>, <90.0, 46.0>", "bezier: <90.0, 46.0>, [<86.6666666666666, 46.0>, <83.3333333333333, 46.0>], <80.0, 46.0>", "arc: <80.0, 46.0>, <80.0, 56.0>", "fill", "move: <90.0, 56.0>", "bezier: <90.0, 56.0>, [<93.3333333333333, 56.0>, <100.0, 56.0>], <100.0, 56.0>", "arc: <100.0, 56.0>, <100.0, 46.0>", "bezier: <100.0, 46.0>, [<100.0, 46.0>, <93.3333333333333, 46.0>], <90.0, 46.0>", "arc: <90.0, 46.0>, <90.0, 56.0>", "fill", "move: <100.0, 56.0>", "bezier: <100.0, 56.0>, [<100.0, 56.0>, <100.0, 56.0>], <100.0, 56.0>", "arc: <100.0, 56.0>, <100.0, 46.0>", "bezier: <100.0, 46.0>, [<100.0, 46.0>, <100.0, 46.0>], <100.0, 46.0>", "arc: <100.0, 46.0>, <100.0, 56.0>", "fill", "move: <100.0, 56.0>", "bezier: <100.0, 56.0>, [<100.0, 56.0>, <106.666666666667, 56.0>], <110.0, 56.0>", "arc: <110.0, 56.0>, <110.0, 46.0>", "bezier: <110.0, 46.0>, [<106.666666666667, 46.0>, <100.0, 46.0>], <100.0, 46.0>", "arc: <100.0, 46.0>, <100.0, 56.0>", "fill", "move: <110.0, 56.0>", "bezier: <110.0, 56.0>, [<113.333333333333, 56.0>, <116.666666666667, 56.0>], <120.0, 56.0>", "arc: <120.0, 56.0>, <120.0, 46.0>", "bezier: <120.0, 46.0>, [<116.666666666667, 46.0>, <113.333333333333, 46.0>], <110.0, 46.0>", "arc: <110.0, 46.0>, <110.0, 56.0>", "fill", "move: <120.0, 56.0>", "bezier: <120.0, 56.0>, [<123.333333333333, 56.0>, <126.666666666667, 56.0>], <130.0, 56.0>", "arc: <130.0, 56.0>, <130.0, 46.0>", "bezier: <130.0, 46.0>, [<126.666666666667, 46.0>, <123.333333333333, 46.0>], <120.0, 46.0>", "arc: <120.0, 46.0>, <120.0, 56.0>", "fill", "move: <130.0, 56.0>", "bezier: <130.0, 56.0>, [<133.333333333333, 56.0>, <136.666666666667, 56.0>], <140.0, 56.0>", "arc: <140.0, 56.0>, <140.0, 46.0>", "bezier: <140.0, 46.0>, [<136.666666666667, 46.0>, <133.333333333333, 46.0>], <130.0, 46.0>", "arc: <130.0, 46.0>, <130.0, 56.0>", "fill", "move: <140.0, 56.0>", "bezier: <140.0, 56.0>, [<143.333333333333, 56.0>, <150.0, 56.0>], <150.0, 56.0>", "arc: <150.0, 56.0>, <150.0, 46.0>", "bezier: <150.0, 46.0>, [<150.0, 46.0>, <143.333333333333, 46.0>], <140.0, 46.0>", "arc: <140.0, 46.0>, <140.0, 56.0>", "fill"],
    "draws the frozen image, any new solidified points, and any new predicted points")

  }

  func testAddOrUpdateAdds() {
    XCTAssertEqual(drawing.strokesByIndex.count, 0)
    drawing.addOrUpdateStroke(1, points: points)

    XCTAssertEqual(drawing.strokesByIndex.count, 1,
      "Adding a single stroke to a drawing draws one stroke")
  }

  func testAddOrUpdateUpdates() {
    drawing.addOrUpdateStroke(1, points: points)
    XCTAssertEqual(drawing.strokesByIndex.count, 1)

    drawing.addOrUpdateStroke(1, points: points)

    XCTAssertEqual(drawing.strokesByIndex.count, 1,
      "Updating a stroke doesn't add a new stroke")
  }

  func testUpdateStrokePredictions() {
    drawing.addOrUpdateStroke(1, points: points)
    var predictions = drawing.strokesByIndex[1]?.predictedPoints
    XCTAssertEqual(predictions!.count, 0)

    drawing.updateStrokePredictions(1, points: points)
    predictions = drawing.strokesByIndex[1]?.predictedPoints

    XCTAssertEqual(predictions!.count, points.count,
      "Updating a strokes's predictions sets its predictions")
  }

  func testForgetPredictions() {
    drawing.addOrUpdateStroke(1, points: points)

    drawing.updateStrokePredictions(1, points: points)
    var predictions = drawing.strokesByIndex[1]?.predictedPoints
    XCTAssertEqual(predictions!.count, points.count)

    drawing.forgetPredictions(1)
    predictions = drawing.strokesByIndex[1]?.predictedPoints
    XCTAssertEqual(predictions!.count, 0,
      "Forgetting predictions empties the predictions array for a stroke")
  }

  // endStroke
  // rectForUpdatedPoints
}
